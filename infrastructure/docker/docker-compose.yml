version: '3.8'

services:
  twitch-chat-mcp:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MCP_TRANSPORT=http
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - TWITCH_REDIRECT_URI=${TWITCH_REDIRECT_URI:-http://localhost:3000/auth/callback}
      # AWS Configuration (optional for local development)
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - KMS_KEY_ID=${KMS_KEY_ID}
      - CLOUDWATCH_LOG_GROUP=${CLOUDWATCH_LOG_GROUP}
    volumes:
      - chat_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: LocalStack for local AWS services testing
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=kms,ssm,logs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    profiles:
      - localstack

volumes:
  chat_data:
    driver: local
  localstack_data:
    driver: local
